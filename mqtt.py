def on_mqtt_connect(mqttc, obj, flags, reason_code, properties):
    """
    This function is called when the MQTT client successfully connects to the broker.

    Args:
        mqttc (mqtt.Client): The MQTT client object.
        obj (object): An unused object passed by the callback API.
        flags (int): The connection flags (usually unused).
        reason_code (int): The connection reason code (0 for success).
        properties (dict): Connection properties (if supported by the broker).
    """
    print("Connected to MQTT Broker with reason code: " + str(reason_code))


def on_mqtt_message(mqttc, obj, msg):
    """
    This function is called whenever a message is received on a subscribed topic.

    Args:
        mqttc (mqtt.Client): The MQTT client object.
        obj (object): An unused object passed by the callback API.
        msg (mqtt.MQTTMessage): The message object containing information about the received message.
            - msg.topic (str): The topic the message was received on.
            - msg.payload (bytes): The payload (data) of the message.
    """
    print("Received message from topic: " + msg.topic + " - " + str(msg.payload))


def on_mqtt_publish(mqttc, obj, mid, reason_code, properties):
    """
    This function is called after a message is published to the broker.

    Args:
        mqttc (mqtt.Client): The MQTT client object.
        obj (object): An unused object passed by the callback API.
        mid (int): The message identifier assigned by the client for tracking.
        reason_code (int): The publish reason code (0 for success).
        properties (dict): Publication properties (if supported by the broker).
    """
    print("Message published with mid: " + str(mid))


def on_mqtt_log(mqttc, obj, level, string):
    """
    This function is for debugging purposes and can be used to log messages generated by the MQTT client.

    Args:
        mqttc (mqtt.Client): The MQTT client object.
        obj (object): An unused object passed by the callback API.
        level (int): The log message level (e.g., debug, info, warning).
        string (str): The actual log message content.
    """
    print(string)
